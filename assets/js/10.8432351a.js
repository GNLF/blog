(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{480:function(s,t,a){"use strict";a.r(t);var r=a(17),e=Object(r.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"pm2部署nodejs项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pm2部署nodejs项目"}},[s._v("#")]),s._v(" PM2部署nodejs项目")]),s._v(" "),a("h2",{attrs:{id:"pm2的主要特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pm2的主要特性"}},[s._v("#")]),s._v(" PM2的主要特性:")]),s._v(" "),a("ul",[a("li",[s._v("内建负载均衡（使用Node cluster 集群模块）")]),s._v(" "),a("li",[s._v("后台运行")]),s._v(" "),a("li",[s._v("0秒停机重载，我理解大概意思是维护升级的时候不需要停机.")]),s._v(" "),a("li",[s._v("具有Ubuntu和CentOS 的启动脚本")]),s._v(" "),a("li",[s._v("停止不稳定的进程（避免无限循环）")]),s._v(" "),a("li",[s._v("控制台检测")]),s._v(" "),a("li",[s._v("提供 HTTP API")]),s._v(" "),a("li",[s._v("远程控制和实时的接口API ( Nodejs 模块,允许和PM2进程管理器交互 )")])]),s._v(" "),a("h2",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[s._v("#")]),s._v(" 安装")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("npm install "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("g pm2\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用法"}},[s._v("#")]),s._v(" 用法")]),s._v(" "),a("p",[a("code",[s._v("$ npm install -g pm2")]),s._v(" 命令行全局安装pm2")]),s._v(" "),a("p",[a("code",[s._v("$ pm2 start app.js 或者 pm2 start bin/www")]),s._v(" 启动node项目")]),s._v(" "),a("p",[s._v("$ pm2 stop bin/www  停止pm2服务\n"),a("code",[s._v("$ pm2 list")]),s._v(" 列出由pm2管理的所有进程信息，还会显示一个进程会被启动多少次，因为没处理的异常。")]),s._v(" "),a("p",[a("img",{attrs:{src:"/blog/img/other/pm21.png",alt:"img"}})]),s._v(" "),a("p",[a("code",[s._v("$ pm2 monit")]),s._v(" 监视每个node进程的CPU和内存的使用情况")]),s._v(" "),a("p",[a("img",{attrs:{src:"/blog/img/other/pm22.png",alt:"img"}})]),s._v(" "),a("p",[a("code",[s._v("$ pm2 logs")]),s._v(" 显示所有进程日志")]),s._v(" "),a("p",[a("code",[s._v("$ pm2 stop all")]),s._v(" 停止所有进程")]),s._v(" "),a("p",[a("code",[s._v("$ pm2 restart all")]),s._v(" 重启所有进程")]),s._v(" "),a("p",[a("code",[s._v("$ pm2 reload all")]),s._v(" 0秒停机重载进程 (用于 NETWORKED 进程)")]),s._v(" "),a("p",[a("code",[s._v("$ pm2 stop 0")]),s._v(" 停止指定的进程")]),s._v(" "),a("p",[a("code",[s._v("$ pm2 restart 0")]),s._v(" 重启指定的进程")]),s._v(" "),a("p",[a("code",[s._v("$ pm2 startup")]),s._v(" 产生 init 脚本 保持进程活着")]),s._v(" "),a("p",[a("code",[s._v("$ pm2 web")]),s._v(" 运行健壮的 computer API endpoint ("),a("a",{attrs:{href:"http://localhost:9615/",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://localhost:9615"),a("OutboundLink")],1),s._v(")")]),s._v(" "),a("p",[a("code",[s._v("$ pm2 delete 0")]),s._v(" 杀死指定的进程")]),s._v(" "),a("p",[a("code",[s._v("$ pm2 delete all")]),s._v(" 杀死全部进程")]),s._v(" "),a("p",[s._v("运行进程的不同方式：")]),s._v(" "),a("p",[a("code",[s._v("$ pm2 start app.js -i max")]),s._v(" 根据有效CPU数目启动最大进程数目")]),s._v(" "),a("p",[a("code",[s._v("$ pm2 start app.js -i 3")]),s._v(" 启动3个进程")]),s._v(" "),a("p",[a("code",[s._v("$ pm2 start app.js -x")]),s._v(" 用fork模式启动 app.js 而不是使用 cluster")]),s._v(" "),a("p",[a("code",[s._v("$ pm2 start app.js -x -- -a 23")]),s._v(" 用fork模式启动 app.js 并且传递参数 (-a 23)")]),s._v(" "),a("p",[a("code",[s._v("$ pm2 start app.js --name serverone")]),s._v(" 启动一个进程并把它命名为 serverone")]),s._v(" "),a("p",[a("code",[s._v("$ pm2 stop serverone")]),s._v(" 停止 serverone 进程")]),s._v(" "),a("p",[a("code",[s._v("$ pm2 start app.json")]),s._v(" 启动进程, 在 app.json里设置选项")]),s._v(" "),a("p",[a("code",[s._v("$ pm2 start app.js -i max -- -a 23")]),s._v(" 在--之后给 app.js 传递参数")]),s._v(" "),a("p",[a("code",[s._v("$ pm2 start app.js -i max -e err.log -o out.log")]),s._v(" 启动 并 生成一个配置文件")]),s._v(" "),a("h2",{attrs:{id:"配置pm2启动文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置pm2启动文件"}},[s._v("#")]),s._v(" 配置pm2启动文件")]),s._v(" "),a("p",[s._v("在项目根目录添加一个processes.json：\n内容如下:")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"apps"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mywork"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"cwd"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/srv/node-app/current"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"script"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bin/www"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"log_date_format"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"YYYY-MM-DD HH:mm Z"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"error_file"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/var/log/node-app/node-app.stderr.log"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"out_file"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"log/node-app.stdout.log"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"pid_file"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"pids/node-geo-api.pid"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"instances"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"min_uptime"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"200s"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"max_restarts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"max_memory_restart"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1M"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"cron_restart"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1 0 * * *"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"watch"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"merge_logs"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"exec_interpreter"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"exec_mode"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fork"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"autorestart"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"vizion"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br")])]),a("p",[s._v("说明:")]),s._v(" "),a("ul",[a("li",[s._v("apps:json结构，apps是一个数组，每一个数组成员就是对应一个pm2中运行的应用")]),s._v(" "),a("li",[s._v("name:应用程序名称")]),s._v(" "),a("li",[s._v("cwd:应用程序所在的目录")]),s._v(" "),a("li",[s._v("script:应用程序的脚本路径")]),s._v(" "),a("li",[s._v("log_date_format:")]),s._v(" "),a("li",[s._v("error_file:自定义应用程序的错误日志文件")]),s._v(" "),a("li",[s._v("out_file:自定义应用程序日志文件")]),s._v(" "),a("li",[s._v("pid_file:自定义应用程序的pid文件")]),s._v(" "),a("li",[s._v("instances:")]),s._v(" "),a("li",[s._v("min_uptime:最小运行时间，这里设置的是60s即如果应用程序在60s内退出，pm2会认为程序异常退出，此时触发重启max_restarts设置数量")]),s._v(" "),a("li",[s._v("max_restarts:设置应用程序异常退出重启的次数，默认15次（从0开始计数）")]),s._v(" "),a("li",[s._v("cron_restart:定时启动，解决重启能解决的问题")]),s._v(" "),a("li",[s._v("watch:是否启用监控模式，默认是false。如果设置成true，当应用程序变动时，pm2会自动重载。这里也可以设置你要监控的文件。")]),s._v(" "),a("li",[s._v("merge_logs:")]),s._v(" "),a("li",[s._v("exec_interpreter:应用程序的脚本类型，这里使用的shell，默认是nodejs")]),s._v(" "),a("li",[s._v("exec_mode:应用程序启动模式，这里设置的是cluster_mode（集群），默认是fork")]),s._v(" "),a("li",[s._v("autorestart:启用/禁用应用程序崩溃或退出时自动重启")]),s._v(" "),a("li",[s._v("vizion:启用/禁用vizion特性(版本控制)")])]),s._v(" "),a("p",[s._v("可以通过"),a("code",[s._v("pm2 start processes.json")]),s._v("来启动。\n也可以把命令写在package.json里。如下:")]),s._v(" "),a("p",[a("img",{attrs:{src:"/blog/img/other/pm23.png",alt:"img"}})]),s._v(" "),a("p",[s._v("通过"),a("code",[s._v("npm run pm2")]),s._v("来启动。")])])}),[],!1,null,null,null);t.default=e.exports}}]);