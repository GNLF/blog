(window.webpackJsonp=window.webpackJsonp||[]).push([[229],{699:function(t,a,e){"use strict";e.r(a);var s=e(17),v=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"restfulapi设计原则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#restfulapi设计原则"}},[t._v("#")]),t._v(" RestfulAPI设计原则")]),t._v(" "),e("blockquote",[e("p",[t._v("REStful本质是一种软件架构风格，核心是面向资源。")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("类别")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("协议")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("API与用户的通信协议，总是使用HTTPs协议。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("域名")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("应该尽量将API部署在专用域名之下。"),e("code",[t._v("https://api.example.com")])])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("URL版本控制")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("应该将API的版本号放入URL。"),e("code",[t._v("https://api.example.com/v{n}/")])])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("API路径规则")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("资源就是URL表示的，所以简洁、清晰、结构化的 URL 设计是至关重要的")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("针对资源的操作")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("通过标准HTTP方法(GET、POST、PUT、DELETE)对资源CRUD。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("验证和授权")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("让任何人随意访问公开的 API 是不好的做法。验证和授权是两件事情")])])])]),t._v(" "),e("h2",{attrs:{id:"协议"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#协议"}},[t._v("#")]),t._v(" 协议")]),t._v(" "),e("p",[t._v("API与用户的通信协议，总是使用HTTPs协议。")]),t._v(" "),e("h2",{attrs:{id:"域名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#域名"}},[t._v("#")]),t._v(" 域名")]),t._v(" "),e("p",[t._v("应该尽量将API部署在专用域名之下。")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("https://api.example.com\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("如果确定API很简单，不会有进一步扩展，可以考虑放在主域名下。")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("https://example.org/api/\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h2",{attrs:{id:"版本控制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#版本控制"}},[t._v("#")]),t._v(" 版本控制")]),t._v(" "),e("p",[t._v("应该将API的版本号放入URL")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("https://api.example.com/v{n}/\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("另一种做法是将版本号放在HTTP头信息中，但不如放入URL方便和直观。Github采用这种做法。")]),t._v(" "),e("p",[t._v("采用多版本并存，增量发布的方式。")]),t._v(" "),e("p",[t._v("v{n} n代表版本号，分为整型和浮点型")]),t._v(" "),e("p",[t._v("整型版本号：大功能版本发布形式，具有当前版本状态下的所有API接口，例如：v1，v2")]),t._v(" "),e("p",[t._v("浮点型版本号：为小版本号，只具备补充api的功能，其他API都默认调用对应大版本号的api 例如：v1.1,v2.1")]),t._v(" "),e("h2",{attrs:{id:"api路径规则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#api路径规则"}},[t._v("#")]),t._v(" API路径规则")]),t._v(" "),e("p",[t._v("路径又称“终点”，表示API具体网址。")]),t._v(" "),e("p",[t._v("在RESTful架构中，每个网址代表一种资源(resource),所以网址中不能有动词，只能有名词，而且所用的名词往往与数据库的表名对应。一般来说，数据库中的表都是同种记录的“集合”,所以API中的名词也应该使用复数。")]),t._v(" "),e("p",[t._v("资源是 Restful API 的核心元素，所有的操作都是针对特定资源进行的。而资源就是 URL（Uniform Resoure Locator）表示的，所以简洁、清晰、结构化的 URL 设计是至关重要的。")]),t._v(" "),e("h3",{attrs:{id:"uri规范"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#uri规范"}},[t._v("#")]),t._v(" URI规范")]),t._v(" "),e("ul",[e("li",[t._v("URI(Uniform Resource Identifiers) 统一资源标示符")]),t._v(" "),e("li",[t._v("URL(Uniform Resource Locator) 统一资源定位符")])]),t._v(" "),e("p",[t._v("URI的格式定义如下：")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('URI = scheme "://" authority "/" path [ "?" query ] [ "#" fragment ]\n')])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("ol",[e("li",[t._v("URI尽量使用“-”代替下划线“_“。")]),t._v(" "),e("li",[t._v("URI统一使用小写字母")]),t._v(" "),e("li",[t._v("URI不包含文件扩展名")]),t._v(" "),e("li",[t._v('使用"?"用来过滤资源，比如:'),e("code",[t._v("?limit=10")]),t._v("指定返回10条记录。")]),t._v(" "),e("li",[t._v("不使用无意义的字符串、数字，要做到简洁。")])]),t._v(" "),e("h3",{attrs:{id:"uri设计示例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#uri设计示例"}},[t._v("#")]),t._v(" URI设计示例")]),t._v(" "),e("blockquote",[e("p",[t._v("一般来说，数据库中的表都是同种记录的“集合”,所以API中的名词也应该使用复数。例如：books、categorys、users")])]),t._v(" "),e("p",[t._v("示例：图书系统包含 图书信息、分类信息、用户信息")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("https://api.example.com/v1/books\nhttps://api.example.com/v1/categorys\nhttps://api.example.com/v1/users\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("h2",{attrs:{id:"api传入参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#api传入参数"}},[t._v("#")]),t._v(" API传入参数")]),t._v(" "),e("p",[t._v("传入参数分为四种类型：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("类型")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("地址栏传递参数")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("https://api.example.com/v1/product/122")]),t._v(" 122为产品id，获取产品为122信息； 查询字符串")])]),t._v(" "),e("tr",[e("td",[t._v("requset body")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("通过http请求体给API传递数据")])]),t._v(" "),e("tr",[e("td",[t._v("cookie")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("一般是用于OAuth认证")])]),t._v(" "),e("tr",[e("td",[t._v("request header")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("一般是用于OAuth认证")])])])]),t._v(" "),e("h2",{attrs:{id:"过滤信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#过滤信息"}},[t._v("#")]),t._v(" 过滤信息")]),t._v(" "),e("p",[t._v("如果信息记录数量很多，服务器不可能都将它们返回给用户。API应该提供参数，过滤返回结果。")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("参数")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("?limit=10")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("指定返回记录条数")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("?offset=100")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("指定返回记录开始位置")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("?page=2&nums=20")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("指定第几页，每页记录数量")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("?sortby=bookname&order=asc")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("指定返回结果按照那个属性排序，以及顺序")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("?bookid=10021")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("指定筛选条件")])])])]),t._v(" "),e("h2",{attrs:{id:"针对资源的操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#针对资源的操作"}},[t._v("#")]),t._v(" 针对资源的操作")]),t._v(" "),e("p",[t._v("通过标准HTTP方法对资源CRUD。")]),t._v(" "),e("p",[t._v("有了资源的 URL 设计，所有针对资源的操作都是使用 HTTP 方法指定的。比较常用的方法有：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("method")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("GET (select)")]),t._v(" "),e("td",[t._v("从服务器上获取一个具体的资源或者一个资源列表")])]),t._v(" "),e("tr",[e("td",[t._v("POST (create)")]),t._v(" "),e("td",[t._v("在服务器上创建一个新的资源")])]),t._v(" "),e("tr",[e("td",[t._v("PUT (update)")]),t._v(" "),e("td",[t._v("以整体的方式更新服务器上的一个资源")])]),t._v(" "),e("tr",[e("td",[t._v("PATCH (update)")]),t._v(" "),e("td",[t._v("只更新服务器上一个资源的一个属性")])]),t._v(" "),e("tr",[e("td",[t._v("DELETE (delete)")]),t._v(" "),e("td",[t._v("删除服务器上的一个资源")])])])]),t._v(" "),e("p",[t._v("一个端点就是指向特定资源或资源集合的URL。")]),t._v(" "),e("p",[t._v("如果你正在构建一个虚构的API来展现几个不同的动物园，每一个动物园又包含很多动物，员工和每个动物的物种，你可能会有如下的端点信息：")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("https://api.example.com/v1/zoos              动物园\nhttps://api.example.com/v1/animals           动物\nhttps://api.example.com/v1/animal_types      动物类型\nhttps://api.example.com/v1/employees         饲养员\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[t._v("针对每一个端点来说，你可能想列出所有可行的HTTP动词和端点的组合。如下所示，请注意我把HTTP动词都放在了虚构的API之前，正如将同样的注解放在每一个HTTP请求头里一样。")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("GET    /zoos:                   列出所有动物园\nPOST   /zoos:                   新建一个动物园\nGET    /zoos/ZID:               获取某个指定动物园的信息\nPUT    /zoos/ZID:               更新某个指定动物园的信息（提供该动物园的全部信息）\nPATCH  /zoos/ZID:               更新某个指定动物园的信息（提供该动物园的部分信息）\nDELETE /zoos/ZID:               删除某个动物园\nGET    /zoos/ZID/animals:       列出某个指定动物园的所有动物\n\nGET   /animals:                 列出所有动物    \nPOST  /animals:                 创建一个新动物\nGET   /animals/AID:             获取某个指定动物信息\nPUT   /animals/AID:             更新某个指定动物的信息（全部信息）\nPATCH /animals/AID:             更新某个指定动物的信息（部分信息）\nGET   /animal_types:            列出所有动物类型\nGET   /animal_types/ATID:       列出某个指定动物类型\n\nGET   /employees:               列出所有饲养员列表\nGET   /employees/EID:           获取某个指定饲养员信息\nGET   /zoos/ZID/employees:      列出在指定动物园工作的饲养员列表\nPOST  /employees:               创建一个新饲养员\nPOST  /zoos/ZID/employees:      给指定动物园创建一个饲养员\nDELETE /zoos/ZID/employees/EID: 删除某个动物园的指定饲养员信息\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br")])]),e("h2",{attrs:{id:"验证和授权"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#验证和授权"}},[t._v("#")]),t._v(" 验证和授权")]),t._v(" "),e("p",[t._v("一般来说，让任何人随意访问公开的 API 是不好的做法。验证和授权是两件事情：")]),t._v(" "),e("ul",[e("li",[t._v("验证（Authentication）是为了确定用户是其申明的身份，比如提供账户的密码。不然的话，任何人伪造成其他身份（比如其他用户或者管理员）是非常危险的")]),t._v(" "),e("li",[t._v("授权（Authorization）是为了保证用户有对请求资源特定操作的权限。比如用户的私人信息只能自己能访问，其他人无法看到；有些特殊的操作只能管理员可以操作，其他用户有只读的权限等等")])]),t._v(" "),e("h3",{attrs:{id:"认证"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#认证"}},[t._v("#")]),t._v(" 认证")]),t._v(" "),e("p",[t._v("RESTful API应该是无状态。这意味着对请求的认证不应该基于cookie或者session。相反，每个请求应该带有一些认证凭证。")]),t._v(" "),e("p",[t._v("如果一直使用SSL，认证凭证可以简单的使用随机生成的access token，把其做为HTTP Basic Auth中user name字段的值传给API。这么做的好处是可以通过浏览器访问 – 如果浏览器从服务器收到401 Unauthorized状态码，它将会弹出一个对话框让人输出认证凭证。")]),t._v(" "),e("p",[t._v("当然，这种基于token来进行基本认证的方法只能当用户从API管理后台拷贝了一个token到自己的代码中才行。如果搞不到token，只能使用OAuth 2来把安全token传递给第三方。OAuth 2使用Bearer token，并且也是基于SSL来保证传输安全。")]),t._v(" "),e("p",[t._v("支持JSONP的API可能需要第三种方法来实现认证，因为JSONP的请求没法发送HTTP Basic Auth凭证或者Bearer token。这种情况下，可以使用一个额外的查询参数access_token。注意：使用查询参数来传递token存在一个固有的安全隐患，因为大多数web服务器会在服务器日志中保存查询参数。")]),t._v(" "),e("p",[t._v("不管怎么样，以上三种方法是用来在API之间传输token的方法。实际传输的token可以是一样的。")]),t._v(" "),e("h3",{attrs:{id:"使用ssl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用ssl"}},[t._v("#")]),t._v(" 使用SSL")]),t._v(" "),e("p",[t._v("一定要使用SSL。没有例外。如今，你的web API可以从任何有互联网的地方（像图书馆，咖啡馆，机场等等）被访问到。这些地方并不都是安全的。很多地方根本没有对网络连接进行加密，如果认证凭证被劫持的话，这样访问者很容易被窃听或者被冒充。")]),t._v(" "),e("p",[t._v("一直使用SSL的另一个优势是，加密的连接简化了用户认证的工作 – 你可以使用简单的access token，而不需要对每个API请求进行签名。")]),t._v(" "),e("p",[t._v("需要注意的一件事是以非SSL的形式访问API的URL。不要把请求跳转到它们的SSL版本上。直接抛出一个严重错误！")]),t._v(" "),e("h2",{attrs:{id:"http方法的幂等性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http方法的幂等性"}},[t._v("#")]),t._v(" HTTP方法的幂等性")]),t._v(" "),e("p",[t._v("要定义严谨的REST的统一接口，就需要真正理解HTTP方法的幂等性")]),t._v(" "),e("ul",[e("li",[t._v("安全性:代表安全的REST的接口，是指外系统对该接口的访问，不会使服务器端资源的状态发生改变。")]),t._v(" "),e("li",[t._v("幂等性:幂等性是指外系统对同一REST接口的多次访问，得到的资源是相同的。")])]),t._v(" "),e("h3",{attrs:{id:"get"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#get"}},[t._v("#")]),t._v(" GET")]),t._v(" "),e("p",[t._v("HTTP的GET方法用于读取资源。GET的方法是幂等的。GET方法也是安全的。如果获取的信息资源状态和资源的值发生变化，就不能使用GET方法。而是使用POST方法")]),t._v(" "),e("p",[t._v("另外我们一并介绍HEAD方法和OPTIONS方法:")]),t._v(" "),e("ul",[e("li",[t._v("HEAD方法和和OPTIONS方法与GET方法类似，是安全和幂等的。只不过HEAD方法从服务端返回值不包括HTTP实体。")]),t._v(" "),e("li",[t._v("OPTIONS用于读取资源所支持的所有HTTP请求方法")])]),t._v(" "),e("h3",{attrs:{id:"put"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#put"}},[t._v("#")]),t._v(" PUT")]),t._v(" "),e("p",[t._v("PUT方法是一种写操作的HTTP请求。REST使用HTTP的PUT方法更新和添加资源。PUT方法是幂等的但不是安全的。")]),t._v(" "),e("p",[t._v("如何区分何时使用PUT")]),t._v(" "),e("ul",[e("li",[t._v("更新一定使用PUT方法")]),t._v(" "),e("li",[t._v("添加资源 创建通常选用POST方法。PUT方法的唯一的应用场景是，客户端发起请求时，在同一数据中总可以提供唯一的主键值。")])]),t._v(" "),e("h3",{attrs:{id:"delete"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#delete"}},[t._v("#")]),t._v(" DELETE")]),t._v(" "),e("p",[t._v("DELETE方法是幂等的，既多次删除同一份数据，在服务器端产生的改变是相同的。")]),t._v(" "),e("h3",{attrs:{id:"post"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#post"}},[t._v("#")]),t._v(" POST")]),t._v(" "),e("p",[t._v("POST方法是一种写操作的HTTP请求，RPC的所有写操作均是使用POST方法。而REST只使用HTTP的POST方法添加资源。")]),t._v(" "),e("p",[t._v("POST 既不幂等也不安全。")])])}),[],!1,null,null,null);a.default=v.exports}}]);