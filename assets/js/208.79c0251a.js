(window.webpackJsonp=window.webpackJsonp||[]).push([[208],{678:function(t,s,v){"use strict";v.r(s);var _=v(17),a=Object(_.a)({},(function(){var t=this,s=t.$createElement,v=t._self._c||s;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"node-js-os-模块"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#node-js-os-模块"}},[t._v("#")]),t._v(" Node.js OS 模块")]),t._v(" "),v("p",[t._v("Node.js os 模块提供了一些基本的系统操作函数。")]),t._v(" "),v("h2",{attrs:{id:"使用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),v("p",[t._v("我们可以通过以下方式引入该模块：")]),t._v(" "),v("div",{staticClass:"language-js line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" os "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"os"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br")])]),v("h2",{attrs:{id:"方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("方法")]),t._v(" "),v("th",[t._v("描述")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("os.tmpdir()")]),t._v(" "),v("td",[t._v("返回操作系统的默认临时文件夹。")])]),t._v(" "),v("tr",[v("td",[t._v("os.endianness()")]),t._v(" "),v("td",[t._v('返回 CPU 的字节序，可能的是 "BE" 或 "LE"。')])]),t._v(" "),v("tr",[v("td",[t._v("os.hostname()")]),t._v(" "),v("td",[t._v("返回操作系统的主机名。")])]),t._v(" "),v("tr",[v("td",[t._v("os.type()")]),t._v(" "),v("td",[t._v("返回操作系统名")])]),t._v(" "),v("tr",[v("td",[t._v("os.platform()")]),t._v(" "),v("td",[t._v("操作系统平台,可能值'darwin'、'linux'、'win32'")])]),t._v(" "),v("tr",[v("td",[t._v("os.arch()")]),t._v(" "),v("td",[t._v('返回操作系统 CPU 架构，可能的值有 "x64"、"arm" 和 "ia32"。')])]),t._v(" "),v("tr",[v("td",[t._v("os.release()")]),t._v(" "),v("td",[t._v("返回操作系统的发行版本。")])]),t._v(" "),v("tr",[v("td",[t._v("os.uptime()")]),t._v(" "),v("td",[t._v("返回操作系统运行的时间，以秒为单位。")])]),t._v(" "),v("tr",[v("td",[t._v("os.loadavg()")]),t._v(" "),v("td",[t._v("返回一个包含 1、5、15 分钟平均负载的数组。")])]),t._v(" "),v("tr",[v("td",[t._v("os.totalmem()")]),t._v(" "),v("td",[t._v("返回系统内存总量，单位为字节。")])]),t._v(" "),v("tr",[v("td",[t._v("os.freemem()")]),t._v(" "),v("td",[t._v("返回操作系统空闲内存量，单位是字节。")])]),t._v(" "),v("tr",[v("td",[t._v("os.cpus()")]),t._v(" "),v("td",[t._v("返回一个对象数组，包含所安装的每个 CPU/内核的信息：型号、速度（单位 MHz）、时间（一个包含 user、nice、sys、idle 和 irq 所使用 CPU/内核毫秒数的对象）。")])]),t._v(" "),v("tr",[v("td",[t._v("os.networkInterfaces()")]),t._v(" "),v("td",[t._v("获得网络接口列表。")])])])])])}),[],!1,null,null,null);s.default=a.exports}}]);