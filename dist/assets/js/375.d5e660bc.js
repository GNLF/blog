(window.webpackJsonp=window.webpackJsonp||[]).push([[375],{846:function(t,s,n){"use strict";n.r(s);var a=n(17),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"vuex-是什么？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vuex-是什么？"}},[t._v("#")]),t._v(" Vuex 是什么？")]),t._v(" "),n("p",[t._v("Vuex 是一个专为 Vue.js 应用程序开发的"),n("strong",[t._v("状态管理模式")]),t._v("。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。Vuex 也集成到 Vue 的官方调试工具 "),n("a",{attrs:{href:"https://github.com/vuejs/vue-devtools",target:"_blank",rel:"noopener noreferrer"}},[t._v("devtools extension"),n("OutboundLink")],1),t._v("，提供了诸如零配置的 time-travel 调试、状态快照导入导出等高级调试功能。")]),t._v(" "),n("h3",{attrs:{id:"什么是-状态管理模式-？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是-状态管理模式-？"}},[t._v("#")]),t._v(" 什么是“状态管理模式”？")]),t._v(" "),n("p",[t._v("让我们从一个简单的 Vue 计数应用开始：")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// state")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      count"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// view")]),t._v("\n  template"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("\n    <div>{{ count }}</div>\n  ")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// actions")]),t._v("\n  methods"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("increment")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br")])]),n("p",[t._v("这个状态自管理应用包含以下几个部分：")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("state")]),t._v("，驱动应用的数据源；")]),t._v(" "),n("li",[n("strong",[t._v("view")]),t._v("，以声明方式将 "),n("strong",[t._v("state")]),t._v(" 映射到视图；")]),t._v(" "),n("li",[n("strong",[t._v("actions")]),t._v("，响应在 "),n("strong",[t._v("view")]),t._v(" 上的用户输入导致的状态变化。")])]),t._v(" "),n("p",[t._v("以下是一个表示“单向数据流”理念的简单示意：")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://vuex.vuejs.org/flow.png",alt:"img"}})]),t._v(" "),n("p",[t._v("但是，当我们的应用遇到"),n("strong",[t._v("多个组件共享状态")]),t._v("时，单向数据流的简洁性很容易被破坏：")]),t._v(" "),n("ul",[n("li",[t._v("多个视图依赖于同一状态。")]),t._v(" "),n("li",[t._v("来自不同视图的行为需要变更同一状态。")])]),t._v(" "),n("p",[t._v("对于问题一，传参的方法对于多层嵌套的组件将会非常繁琐，并且对于兄弟组件间的状态传递无能为力。对于问题二，我们经常会采用父子组件直接引用或者通过事件来变更和同步状态的多份拷贝。以上的这些模式非常脆弱，通常会导致无法维护的代码。")]),t._v(" "),n("p",[t._v("因此，我们为什么不把组件的共享状态抽取出来，以一个全局单例模式管理呢？在这种模式下，我们的组件树构成了一个巨大的“视图”，不管在树的哪个位置，任何组件都能获取状态或者触发行为！")]),t._v(" "),n("p",[t._v("通过定义和隔离状态管理中的各种概念并通过强制规则维持视图和状态间的独立性，我们的代码将会变得更结构化且易维护。")]),t._v(" "),n("p",[t._v("这就是 Vuex 背后的基本思想，借鉴了 "),n("a",{attrs:{href:"https://facebook.github.io/flux/docs/overview",target:"_blank",rel:"noopener noreferrer"}},[t._v("Flux"),n("OutboundLink")],1),t._v("、"),n("a",{attrs:{href:"http://redux.js.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Redux"),n("OutboundLink")],1),t._v(" 和 "),n("a",{attrs:{href:"https://guide.elm-lang.org/architecture/",target:"_blank",rel:"noopener noreferrer"}},[t._v("The Elm Architecture"),n("OutboundLink")],1),t._v("。与其他模式不同的是，Vuex 是专门为 Vue.js 设计的状态管理库，以利用 Vue.js 的细粒度数据响应机制来进行高效的状态更新。")]),t._v(" "),n("p",[t._v("如果你想交互式地学习 Vuex，可以看这个 "),n("a",{attrs:{href:"https://scrimba.com/g/gvuex",target:"_blank",rel:"noopener noreferrer"}},[t._v("Scrimba 上的 Vuex 课程"),n("OutboundLink")],1),t._v("，它将录屏和代码试验场混合在了一起，你可以随时暂停并尝试。")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://vuex.vuejs.org/vuex.png",alt:"vuex"}})]),t._v(" "),n("h3",{attrs:{id:"什么情况下我应该使用-vuex？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么情况下我应该使用-vuex？"}},[t._v("#")]),t._v(" 什么情况下我应该使用 Vuex？")]),t._v(" "),n("p",[t._v("Vuex 可以帮助我们管理共享状态，并附带了更多的概念和框架。这需要对短期和长期效益进行权衡。")]),t._v(" "),n("p",[t._v("如果您不打算开发大型单页应用，使用 Vuex 可能是繁琐冗余的。确实是如此——如果您的应用够简单，您最好不要使用 Vuex。一个简单的 "),n("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/state-management.html#%E7%AE%80%E5%8D%95%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86%E8%B5%B7%E6%AD%A5%E4%BD%BF%E7%94%A8",target:"_blank",rel:"noopener noreferrer"}},[t._v("store 模式"),n("OutboundLink")],1),t._v("就足够您所需了。但是，如果您需要构建一个中大型单页应用，您很可能会考虑如何更好地在组件外部管理状态，Vuex 将会成为自然而然的选择。引用 Redux 的作者 Dan Abramov 的话说就是：")]),t._v(" "),n("blockquote",[n("p",[t._v("Flux 架构就像眼镜：您自会知道什么时候需要它。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);