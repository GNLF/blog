(window.webpackJsonp=window.webpackJsonp||[]).push([[151],{513:function(s,a,n){"use strict";n.r(a);var t=n(17),e=Object(t.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"数组案例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数组案例"}},[s._v("#")]),s._v(" 数组案例")]),s._v(" "),n("ol",[n("li",[n("p",[s._v("取1-100随机数10个，要求不能重复")])]),s._v(" "),n("li",[n("p",[s._v("为数组 arr 中的每个元素求二次方。不要直接修改数组 arr，结果返回新的数组")])]),s._v(" "),n("li",[n("p",[s._v("将数组中的元素反转 (开头结尾元素互换位置)")])]),s._v(" "),n("li",[n("p",[s._v("求数组中数字的最大值和最小值")])]),s._v(" "),n("li",[n("p",[s._v("给出一个非负整数数组，你最初定位在数组的第一个位置。数组中的每个元素代表你在那个位置可以跳跃的最大长度。判断你是否能到达数组的最后一个位置。(例：A = [2,3,1,1,4]，返回 true； A = [3,2,1,0,4]，返回 false.)")])]),s._v(" "),n("li",[n("p",[s._v("给一个字符串组成的数组，找出其中所有最长的单词。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v(' 在数组\n [\n   "dog",\n   "google",\n   "facebook",\n   "internationalization",\n   "blabla"\n ]\n 中, 最长的单词集合为 ["internationalization"]\n\n 在数组\n [\n   "like",\n   "love",\n   "hate",\n   "yes"\n ]\n 中，最长的单词集合为 ["like", "love", "hate"]\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("给一个乱序的数组排序 (多种排序算法)")])]),s._v(" "),n("li",[n("p",[s._v("给定一个未排序的整数数组，找到其中位数。(中位数是排序后数组的中间值，如果数组的个数是偶数个，则返回排序后数组的第N/2个数。例：给出数组[4, 5, 1, 2, 3]， 返回 3，给出数组[7, 9, 4, 5]，返回 5)")])]),s._v(" "),n("li",[n("p",[s._v("给定一个非负数，表示一个数字数组，在该数的基础上+1，返回一个新的数组。该数字按照大小进行排列，最大的数在列表的最前面。 (例：给定 [1,2,3] 表示 123, 返回 [1,2,4]；给定 [9,9,9] 表示 999, 返回 [1,0,0,0].)")]),s._v(" "),n("ul",[n("li",[s._v("数组转为字符串")]),s._v(" "),n("li",[s._v("字符串与数字之间的相互转换")])])]),s._v(" "),n("li",[n("p",[s._v("不声明第三个变量，使两个变量的那内容互换。")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("数组赋值")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" b"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])])])])]),s._v(" "),n("li",[n("p",[s._v("编写一个方法,去掉数组中的重复元素.")]),s._v(" "),n("ul",[n("li",[s._v("先排序，再比较前后去重")]),s._v(" "),n("li",[s._v("利用set数据结构去重")]),s._v(" "),n("li",[s._v("利用对象去重")])])]),s._v(" "),n("li",[n("p",[s._v("实现随机打乱数组元素的功能，将数组乱序排列。")])]),s._v(" "),n("li",[n("p",[s._v("将奇数排序：给你一个数字数组。你的任务是将奇数按照升序的顺序排序，但是偶数必须在他们的位置上。如果给你的是空数组，请返回它。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("sortArray([5, 3, 2, 8, 1, 4]) ==> [1, 3, 2, 8, 5, 4]\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])])])])}),[],!1,null,null,null);a.default=e.exports}}]);