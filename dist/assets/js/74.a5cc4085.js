(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{398:function(s,t,a){"use strict";a.r(t);var n=a(17),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[s._v("#")]),s._v(" 运算符")]),s._v(" "),a("blockquote",[a("p",[s._v("运算符用于执行程序代码运算，会针对一个或以上操作数项目来进行运算。")])]),s._v(" "),a("p",[s._v("JavaScript中的运算符主要分为:")]),s._v(" "),a("ul",[a("li",[s._v("算术运算符")]),s._v(" "),a("li",[s._v("关系(比较)运算符")]),s._v(" "),a("li",[s._v("赋值运算符")]),s._v(" "),a("li",[s._v("逻辑运算符")]),s._v(" "),a("li",[s._v("一元运算符")]),s._v(" "),a("li",[s._v("三元运算符")]),s._v(" "),a("li",[s._v("特殊运算符")])]),s._v(" "),a("h2",{attrs:{id:"算数运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算数运算符"}},[s._v("#")]),s._v(" 算数运算符")]),s._v(" "),a("p",[s._v("JavaScript中的算术运算符中有加(+)、减(-)、乘(*)、除(/)、取余(%)、自增(++)、自减(--)、求幂(**)")]),s._v(" "),a("h3",{attrs:{id:"加法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#加法"}},[s._v("#")]),s._v(" 加法(+)")]),s._v(" "),a("p",[s._v("JavaScript中的+主要用于两个方面，一个是加法运算，另一个是用来进行字符串拼接，加法运算规则如下：")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("数字与除字符串以外类型相加： 将其他类型转化为数字后算术相加，无法转化则结果为NaN")]),s._v(" "),a("ul",[a("li",[s._v("true 转化为1")]),s._v(" "),a("li",[s._v("false、null转化为0")]),s._v(" "),a("li",[s._v("undefined 无法转化")])])]),s._v(" "),a("li",[a("p",[s._v("NaN与除字符串以外类型相加结果都为NaN")])]),s._v(" "),a("li",[a("p",[s._v("字符串与任意类型相加： 拼接")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//1")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//'11'")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("NaN")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1'")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//'NaN1'")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//"1,2,31"')]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1'")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])])])]),s._v(" "),a("p",[s._v("在开发中，我们经常需要将变量的值输出到某个字符串中，这时需要将变量与字符串进行拼接，字符串拼接有两种方式：")]),s._v(" "),a("h4",{attrs:{id:"_1-拼接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-拼接"}},[s._v("#")]),s._v(" 1. + 拼接")]),s._v(" "),a("p",[s._v("变量必须放到字符串引号外部，变量与字符串之间用"),a("code",[s._v("+")]),s._v("连接：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"张三"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sex "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"男"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"的年龄是:"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("age"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"，性别是:"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("sex "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h4",{attrs:{id:"_2-es6模板字符串-ie不支持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-es6模板字符串-ie不支持"}},[s._v("#")]),s._v(" 2. es6模板字符串 (ie不支持)")]),s._v(" "),a("blockquote",[a("p",[s._v("传统"),a("code",[s._v("+")]),s._v("拼接字符串相当繁琐不方便，ES6 引入了模板字符串解决这个问题")])]),s._v(" "),a("p",[s._v("模板字符串用 反单引号(`) 标识，可以当作普通字符串使用，或者在字符串中嵌入变量:")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"张三"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sex "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"男"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("${")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("的年龄是:")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("${")]),s._v("age"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("，性别是:")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("${")]),s._v("sex"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("模板字符串特点：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v(" 模板字符串中嵌入变量，需要将变量名写在`$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("之中，变量与字符串不需要 ")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("连接\n2. ")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),s._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v(" 中可以放入任意的 JavaScript 表达式，可以进行运算，以及引用对象属性： ")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),s._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("num "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("`\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v(" 模板字符串中可以换行\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.")]),s._v(" 模板字符串中可以随意使用单双引号\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"减法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#减法"}},[s._v("#")]),s._v(" 减法(-)")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("数字和字符串相减 :")]),s._v(" "),a("ul",[a("li",[s._v("字符串全部由数字组成，将字符串转化为数字，再相减")]),s._v(" "),a("li",[s._v("字符串不能转化为数字，结束是 NaN")]),s._v(" "),a("li",[s._v("null转化为0 undefined转化为NaN true为1 false为0")])])]),s._v(" "),a("li",[a("p",[s._v("字符串和字符串相减 : 和数字和字符串相减规则相同")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'11a'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//NaN")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'11'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//10")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])])]),s._v(" "),a("h4",{attrs:{id:"加减法做数字与字符串的转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#加减法做数字与字符串的转换"}},[s._v("#")]),s._v(" 加减法做数字与字符串的转换")]),s._v(" "),a("ul",[a("li",[s._v("数字转化为字符串: "),a("code",[s._v('num + ""')])]),s._v(" "),a("li",[s._v("字符串转化为数字: "),a("code",[s._v("num - 0")])])]),s._v(" "),a("h3",{attrs:{id:"乘法运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#乘法运算"}},[s._v("#")]),s._v(" 乘法运算")]),s._v(" "),a("ol",[a("li",[s._v("数字与字符串运算：\n"),a("ul",[a("li",[s._v("将字符串尝试着转化为数字，进行运算")]),s._v(" "),a("li",[s._v("字符串不能转化为数字，结果是 NaN")])])]),s._v(" "),a("li",[s._v("null转化为0 true为1 false为0 空字符串转为0")]),s._v(" "),a("li",[s._v("Undefined乘所有数据类型的都为NaN")]),s._v(" "),a("li",[s._v("字符串和字符串运算 : 和数字和字符串运算规则相同")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'11'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'11'")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 121")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1a'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//NaN")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"除法运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#除法运算"}},[s._v("#")]),s._v(" 除法运算")]),s._v(" "),a("ol",[a("li",[s._v("字符串类型 数字类型与 null 相除 结果为 Infinity")]),s._v(" "),a("li",[s._v("字符串类型、数字类型 null与 Undefined 相除 结果为 NaN")]),s._v(" "),a("li",[s._v("字符串类型 数字类型 null与 字符串类型、数字类型 null相除进行相应转换做除法运算\n"),a("ul",[a("li",[s._v("字符串不能转为数字则结果为NaN")]),s._v(" "),a("li",[s._v("空字符串转为0")])])])]),s._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v("              "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//Infinity")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'11'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'11'")]),s._v("            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'11a'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'11'")]),s._v("            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// NaN")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"取余"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#取余"}},[s._v("#")]),s._v(" 取余(%)")]),s._v(" "),a("p",[s._v("取余，即取余数，如 "),a("code",[s._v("10 % 3")]),s._v(" 则指 10除以3的余数")]),s._v(" "),a("blockquote",[a("p",[s._v("用于取一段范围的值\n一般不用于小数，因为结果不确定（不精确）。")])]),s._v(" "),a("ol",[a("li",[a("p",[s._v("Undefined 与所有数据类型的 取余 都为NaN")])]),s._v(" "),a("li",[a("p",[s._v("其余数据类型先进行转换，能转为数字则进行取余运算，否则为NaN")]),s._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// NaN")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// NaN")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("判断数字num是否是偶数：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"是偶数"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])])]),s._v(" "),a("h3",{attrs:{id:"自加-自减"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自加-自减"}},[s._v("#")]),s._v(" ++ 自加 -- 自减")]),s._v(" "),a("blockquote",[a("p",[s._v("规则： i++ 相当于变量i自身值变大1，类似i+=1； i--同理 "),a("code",[s._v("++")]),s._v("可写在变量前或后： "),a("code",[s._v("i++")]),s._v("是先访问i然后再自增，而"),a("code",[s._v("++i")]),s._v("则是先自增然后再访问i的值")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 10   先输出，后自增。 console.log(i);  i++;")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 11   先自增，后输出。 i++;  console.log(i);")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"求幂运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#求幂运算符"}},[s._v("#")]),s._v(" 求幂运算符")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("x"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("**")]),s._v("y"),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v(" 取x的y次方，同")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),s._v("Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("pow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("**")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//9")]),s._v("\n效果同\nMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("pow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//9")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h2",{attrs:{id:"关系-比较-运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关系-比较-运算符"}},[s._v("#")]),s._v(" 关系(比较)运算符")]),s._v(" "),a("p",[s._v("比较运算符得到的结果 都是 boolean")]),s._v(" "),a("p",[s._v("主要有以下几种比较运算符")]),s._v(" "),a("ul",[a("li",[s._v(">")]),s._v(" "),a("li",[s._v("<")]),s._v(" "),a("li",[s._v(">=")]),s._v(" "),a("li",[s._v("<=")]),s._v(" "),a("li",[s._v("== (相等)")]),s._v(" "),a("li",[s._v("!= (不相等)")]),s._v(" "),a("li",[s._v("=== (全等)")]),s._v(" "),a("li",[s._v("!== (不全等)")])]),s._v(" "),a("h3",{attrs:{id:"比较规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#比较规则"}},[s._v("#")]),s._v(" 比较规则")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("将比较的对象尝试转化为数字,能转化则按照数字比较,不能转化则为false")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("NaN")]),s._v("与任意数据比较结果均为 false")])]),s._v(" "),a("li",[a("p",[s._v("字符串和字符串比较, 比较第一个字符的unicode编码值，第一个字符要是相同，就比较第二个，依次往下(ASCII码表在最末尾)")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'10000'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2'")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//1的unicode值比2的unicode值小  true       ")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'10000'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//转成数字比较  true")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("==")]),s._v("和全等"),a("code",[s._v("===")]),s._v("的区别:")]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("=")]),s._v("是只比较两变得值(如果两边类型不相同，则先尝试着转化，然后再比较，所以耗时比"),a("code",[s._v("===")]),s._v("多)")]),s._v(" "),a("ul",[a("li",[s._v("0==undefined (false)")]),s._v(" "),a("li",[s._v("0==null (false)")]),s._v(" "),a("li",[s._v("NaN == NaN (false)")]),s._v(" "),a("li",[s._v("undefined==null (true)")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("===")]),s._v("比较两边的值和类型，都相等才返回true；")])])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("===")]),s._v("和"),a("code",[s._v("object.js()")]),s._v("的区别")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("is")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("               "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//false")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("                         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//true")]),s._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("is")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("             "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//true")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("NaN")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("NaN")]),s._v("                       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//false")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])])]),s._v(" "),a("h2",{attrs:{id:"赋值运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#赋值运算符"}},[s._v("#")]),s._v(" 赋值运算符")]),s._v(" "),a("blockquote",[a("p",[a("code",[s._v("=、+=、-=、*=、/=、%=、**=")]),s._v(" 运算符右边的值赋给左边的变量")])]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("运算符")]),s._v(" "),a("th",[s._v("实例")]),s._v(" "),a("th",[s._v("等价于")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("code",[s._v("=")])]),s._v(" "),a("td",[s._v("a=25")]),s._v(" "),a("td",[s._v("a=25")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("+=")])]),s._v(" "),a("td",[s._v("a+=25")]),s._v(" "),a("td",[s._v("a=a+25")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("-=")])]),s._v(" "),a("td",[s._v("a-=25")]),s._v(" "),a("td",[s._v("a=a-25")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("*=")])]),s._v(" "),a("td",[s._v("a*=25")]),s._v(" "),a("td",[s._v("a=a*25")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("/=")])]),s._v(" "),a("td",[s._v("a/=25")]),s._v(" "),a("td",[s._v("a=a/25")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("%=")])]),s._v(" "),a("td",[s._v("a%=25")]),s._v(" "),a("td",[s._v("a=a%25")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("**=")])]),s._v(" "),a("td",[s._v("a**=3")]),s._v(" "),a("td",[s._v("a=a^3")])])])]),s._v(" "),a("h2",{attrs:{id:"逻辑运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符"}},[s._v("#")]),s._v(" 逻辑运算符")]),s._v(" "),a("blockquote",[a("p",[s._v('在JavaScript逻辑运算中，0、""、null、false、undefined、NaN都会判为false，其他都为true')])]),s._v(" "),a("ol",[a("li",[a("p",[s._v("与"),a("code",[s._v("&&")])]),s._v(" "),a("ul",[a("li",[s._v("只要有一个是假，结果就是假")]),s._v(" "),a("li",[s._v("&&左侧是真，结果取右侧； 左侧假，结果取左侧值")])])]),s._v(" "),a("li",[a("p",[s._v("或"),a("code",[s._v("||")])]),s._v(" "),a("ul",[a("li",[s._v("只要有一个是真，结果就是真")]),s._v(" "),a("li",[s._v("||左侧是真，结果取左侧； 左侧假，结果取右侧值")])])]),s._v(" "),a("li",[a("p",[s._v("非"),a("code",[s._v("!")])]),s._v(" "),a("ul",[a("li",[s._v("取反")]),s._v(" "),a("li",[s._v("结果是"),a("code",[s._v("boolean")]),s._v("值")])])])]),s._v(" "),a("p",[s._v("总结： 与或运算，哪一侧能决定表达式真假性，则结果取哪一侧。")]),s._v(" "),a("p",[s._v("例:")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h3",{attrs:{id:"逻辑运算符的应用：短路原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符的应用：短路原则"}},[s._v("#")]),s._v(" 逻辑运算符的应用：短路原则")]),s._v(" "),a("blockquote",[a("p",[s._v("与或运算左侧结果已经确定整个表达式真假性，则右侧不再计算")])]),s._v(" "),a("ul",[a("li",[s._v("&&与运算：左侧是假，右侧不进行计算")]),s._v(" "),a("li",[s._v("||或运算：左侧是真，右侧不进行计算")])]),s._v(" "),a("h2",{attrs:{id:"一元运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一元运算符"}},[s._v("#")]),s._v(" 一元运算符")]),s._v(" "),a("p",[s._v("只能操作一个值的操作符就叫做一元操作符")]),s._v(" "),a("ul",[a("li",[s._v("new (创建对象) delete (删除对象上的内容)")]),s._v(" "),a("li",[s._v("typeof -(负号) +(正号)")]),s._v(" "),a("li",[s._v("instanceof (判断对象是否由一个构造函数实例化)")])]),s._v(" "),a("h2",{attrs:{id:"三元运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三元运算符"}},[s._v("#")]),s._v(" 三元运算符")]),s._v(" "),a("blockquote",[a("p",[s._v("基于某些条件对变量进行赋值的条件运算符，")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" iablename"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("condition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("value1"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("value2\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("condition为true则variablename取:前的值，也就是value1，否则取:后的值，也就是value2")]),s._v(" "),a("h3",{attrs:{id:"三元运算符使用技巧"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三元运算符使用技巧"}},[s._v("#")]),s._v(" 三元运算符使用技巧")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("可以简化条件判断")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" fee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("isMember"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n fee"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"￥2.00"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n fee"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"￥10.00"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nfee"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("isMember "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"￥2.00"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"￥10.00"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("三元运算符用来执行多个操作,用小括号包裹，再用逗号隔开语句。")])])]),s._v(" "),a("h2",{attrs:{id:"特殊运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特殊运算符"}},[s._v("#")]),s._v(" 特殊运算符")]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v(",")]),s._v(" 逗号 —— 分隔数据")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" num1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" num3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("()")]),s._v(" 小括号运算符 —— 提升算术优先级")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 16")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" l "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 20")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])])]),s._v(" "),a("h2",{attrs:{id:"运算符的优先级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算符的优先级"}},[s._v("#")]),s._v(" 运算符的优先级")]),s._v(" "),a("blockquote",[a("p",[s._v("下表中的运算符按从最高到最低的优先级列出。具有相同优先级的运算符按从左至右的顺序求值。")])]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("运算符")]),s._v(" "),a("th",[s._v("运算符类型")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("code",[s._v("(…)")])]),s._v(" "),a("td",[s._v("圆括号")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("….…")]),s._v(", "),a("code",[s._v("…[…]")]),s._v(" ,"),a("code",[s._v("new…(…)")]),s._v(","),a("code",[s._v("…(…)")])]),s._v(" "),a("td",[s._v("成员访问,需计算的成员访问,new(带参数列表),函数调用")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("new …")])]),s._v(" "),a("td",[s._v("new(无参数列表)")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("…++")]),s._v(", "),a("code",[s._v("…--")])]),s._v(" "),a("td",[s._v("后置递增(运算符在后) 后置递减(运算符在后)")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("!…")]),s._v(","),a("code",[s._v("~…")]),s._v(","),a("code",[s._v("+…")]),s._v(","),a("code",[s._v("-…")]),s._v(","),a("code",[s._v("++…")]),s._v(","),a("code",[s._v("--…")]),s._v(","),a("code",[s._v("typeof…")]),s._v(","),a("code",[s._v("void…")]),s._v(","),a("code",[s._v("delete…")]),s._v(","),a("code",[s._v("await…")])]),s._v(" "),a("td",[s._v("逻辑非 按位非 一元加法 一元减法 前置递增 前置递减 typeof void delete await")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("…**…")])]),s._v(" "),a("td",[s._v("幂")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("…*…")]),s._v(" "),a("code",[s._v("…/…")]),s._v(" "),a("code",[s._v("…%…")])]),s._v(" "),a("td",[s._v("乘法 除法 取余")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("+")]),s._v(" "),a("code",[s._v("-")])]),s._v(" "),a("td",[s._v("加法 减法")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("<")]),s._v(" "),a("code",[s._v("<=")]),s._v(" "),a("code",[s._v(">")]),s._v(" "),a("code",[s._v(">=")]),s._v(" "),a("code",[s._v("in")]),s._v(" "),a("code",[s._v("instanceof")])]),s._v(" "),a("td",[s._v("小于 小于等于 大于 大于等于 in 判断是否为这个构造函数实例化")])]),s._v(" "),a("tr",[a("td",[s._v("`` "),a("code",[s._v("!=")]),s._v(" "),a("code",[s._v("=")]),s._v(" "),a("code",[s._v("!==")])]),s._v(" "),a("td",[s._v("等号 非等 全等 非全等")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("&&")])]),s._v(" "),a("td",[s._v("逻辑与")])]),s._v(" "),a("tr",[a("td",[s._v("¦¦")]),s._v(" "),a("td",[s._v("逻辑或")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("… ? … : …")])]),s._v(" "),a("td",[s._v("三元运算符")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("=")]),s._v(" "),a("code",[s._v("+=")]),s._v(" "),a("code",[s._v("-=")]),s._v(" "),a("code",[s._v("*=")]),s._v(" "),a("code",[s._v("/=")]),s._v(" "),a("code",[s._v("%=")]),s._v(" "),a("code",[s._v("**=")])]),s._v(" "),a("td",[s._v("赋值")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v(",")])]),s._v(" "),a("td",[s._v("逗号")])])])]),s._v(" "),a("p",[a("img",{attrs:{src:"/blog/img/js/ASCII.jpg",alt:"ASCII码表"}})])])}),[],!1,null,null,null);t.default=e.exports}}]);