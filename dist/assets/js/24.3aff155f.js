(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{493:function(e,s,t){"use strict";t.r(s);var r=t(17),a=Object(r.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"进程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#进程"}},[e._v("#")]),e._v(" 进程")]),e._v(" "),t("blockquote",[t("p",[e._v("处理对象的扩展")])]),e._v(" "),t("p",[e._v("进程： Main, Renderer")]),e._v(" "),t("p",[e._v("Electron's "),t("code",[e._v("process")]),e._v(" 对象继承 "),t("a",{attrs:{href:"https://nodejs.org/api/process.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Node.js "),t("code",[e._v("process")]),e._v(" object"),t("OutboundLink")],1),e._v("。 它新增了以下事件、属性和方法")]),e._v(" "),t("h2",{attrs:{id:"sandbox"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sandbox"}},[e._v("#")]),e._v(" Sandbox")]),e._v(" "),t("p",[e._v("In sandboxed renderers the "),t("code",[e._v("process")]),e._v(" object contains only a subset of the APIs:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("crash()")])]),e._v(" "),t("li",[t("code",[e._v("hang()")])]),e._v(" "),t("li",[t("code",[e._v("getCreationTime()")])]),e._v(" "),t("li",[t("code",[e._v("getHeapStatistics()")])]),e._v(" "),t("li",[t("code",[e._v("getBlinkMemoryInfo()")])]),e._v(" "),t("li",[t("code",[e._v("getProcessMemoryInfo()")])]),e._v(" "),t("li",[t("code",[e._v("getSystemMemoryInfo()")])]),e._v(" "),t("li",[t("code",[e._v("getSystemVersion()")])]),e._v(" "),t("li",[t("code",[e._v("getCPUUsage()")])]),e._v(" "),t("li",[t("code",[e._v("getIOCounters()")])]),e._v(" "),t("li",[t("code",[e._v("argv")])]),e._v(" "),t("li",[t("code",[e._v("execPath")])]),e._v(" "),t("li",[t("code",[e._v("env")])]),e._v(" "),t("li",[t("code",[e._v("pid")])]),e._v(" "),t("li",[t("code",[e._v("arch")])]),e._v(" "),t("li",[t("code",[e._v("platform")])]),e._v(" "),t("li",[t("code",[e._v("沙盒化")])]),e._v(" "),t("li",[t("code",[e._v("type")])]),e._v(" "),t("li",[t("code",[e._v("version")])]),e._v(" "),t("li",[t("code",[e._v("versions")])]),e._v(" "),t("li",[t("code",[e._v("mas")])]),e._v(" "),t("li",[t("code",[e._v("windowsStore")])])]),e._v(" "),t("h2",{attrs:{id:"事件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事件"}},[e._v("#")]),e._v(" 事件")]),e._v(" "),t("h3",{attrs:{id:"事件-loaded"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事件-loaded"}},[e._v("#")]),e._v(" 事件: 'loaded'")]),e._v(" "),t("p",[e._v("当Electron加载了它的内部初始化脚本并且是正要开始加载网页或主脚本时触发。")]),e._v(" "),t("p",[e._v("当node集成被关闭时，预加载脚本可以使用它将删除的 Node global symbols 添加回全局范围：")]),e._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// preload.js")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" _setImmediate "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" setImmediate\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" _clearImmediate "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" clearImmediate\nprocess"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("once")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'loaded'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=>")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  global"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("setImmediate "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" _setImmediate\n  global"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("clearImmediate "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" _clearImmediate\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br")])]),t("h2",{attrs:{id:"属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[e._v("#")]),e._v(" 属性")]),e._v(" "),t("h3",{attrs:{id:"process-defaultapp-readonly"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-defaultapp-readonly"}},[e._v("#")]),e._v(" "),t("code",[e._v("process.defaultApp")]),e._v(" "),t("em",[e._v("Readonly")])]),e._v(" "),t("p",[t("code",[e._v("Boolean")]),e._v("类型， 当作为参数传递给默认应用程序启动应用时，该属性在主进程中为"),t("code",[e._v("true")]),e._v("，否则为"),t("code",[e._v("undefined")]),e._v("。")]),e._v(" "),t("h3",{attrs:{id:"process-ismainframe-readonly"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-ismainframe-readonly"}},[e._v("#")]),e._v(" "),t("code",[e._v("process.isMainFrame")]),e._v(" "),t("em",[e._v("Readonly")])]),e._v(" "),t("p",[t("code",[e._v("Boolean")]),e._v("类型， 当前渲染器为主渲染器时为"),t("code",[e._v("true")]),e._v("。如果你需要获取当前渲染器的ID你需要使用"),t("code",[e._v("webFrame.routingId")]),e._v(" 。")]),e._v(" "),t("h3",{attrs:{id:"process-mas-readonly"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-mas-readonly"}},[e._v("#")]),e._v(" "),t("code",[e._v("process.mas")]),e._v(" "),t("em",[e._v("Readonly")])]),e._v(" "),t("p",[t("code",[e._v("Boolean")]),e._v("类型，为 Mac App Store 生成, 此属性为 "),t("code",[e._v("true")]),e._v(", 对于其他生成，则为 "),t("code",[e._v("undefined")]),e._v("。")]),e._v(" "),t("h3",{attrs:{id:"process-noasar"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-noasar"}},[e._v("#")]),e._v(" "),t("code",[e._v("process.noAsar")])]),e._v(" "),t("p",[t("code",[e._v("Boolean")]),e._v("类型, 用于控制应用程序内的 ASAR 支持。将此设置为 "),t("code",[e._v("true")]),e._v(" 将在Node的内置模块中禁用对 "),t("code",[e._v("asar")]),e._v(" 的支持。")]),e._v(" "),t("h3",{attrs:{id:"process-nodeprecation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-nodeprecation"}},[e._v("#")]),e._v(" "),t("code",[e._v("process.noDeprecation")])]),e._v(" "),t("p",[t("code",[e._v("Boolean")]),e._v(" 类型，用于控制弃用警告是否被打印到"),t("code",[e._v("stderr")]),e._v("。 将其设置为"),t("code",[e._v("true")]),e._v("将会禁用弃用警告。 使用此属性代替 "),t("code",[e._v("-no-deprecation")]),e._v(" 命令行标志。")]),e._v(" "),t("h3",{attrs:{id:"process-enablepromiseapis"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-enablepromiseapis"}},[e._v("#")]),e._v(" "),t("code",[e._v("process.enablePromiseAPIs")])]),e._v(" "),t("p",[e._v("A "),t("code",[e._v("Boolean")]),e._v(" that controls whether or not deprecation warnings are printed to "),t("code",[e._v("stderr")]),e._v(" when formerly callback-based APIs converted to Promises are invoked using callbacks. 将其设置为"),t("code",[e._v("true")]),e._v("将会禁用弃用警告。")]),e._v(" "),t("h3",{attrs:{id:"process-resourcespath-readonly"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-resourcespath-readonly"}},[e._v("#")]),e._v(" "),t("code",[e._v("process.resourcesPath")]),e._v(" "),t("em",[e._v("Readonly")])]),e._v(" "),t("p",[t("code",[e._v("String")]),e._v(" 类型， 表示资源目录的路径。")]),e._v(" "),t("h3",{attrs:{id:"process-sandboxed-readonly"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-sandboxed-readonly"}},[e._v("#")]),e._v(" "),t("code",[e._v("process.sandboxed")]),e._v(" "),t("em",[e._v("Readonly")])]),e._v(" "),t("p",[e._v("A "),t("code",[e._v("Boolean")]),e._v(". When the renderer process is sandboxed, this property is "),t("code",[e._v("true")]),e._v(", otherwise it is "),t("code",[e._v("undefined")]),e._v(".")]),e._v(" "),t("h3",{attrs:{id:"process-throwdeprecation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-throwdeprecation"}},[e._v("#")]),e._v(" "),t("code",[e._v("process.throwDeprecation")])]),e._v(" "),t("p",[t("code",[e._v("Boolean")]),e._v("类型，用于控制是否将弃用警告当做例外。 设置它为 "),t("code",[e._v("true")]),e._v(" 时会抛出错误。 使用此属性代替 "),t("code",[e._v("--throw-deprecation")]),e._v(" 命令行标志。")]),e._v(" "),t("h3",{attrs:{id:"process-tracedeprecation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-tracedeprecation"}},[e._v("#")]),e._v(" "),t("code",[e._v("process.traceDeprecation")])]),e._v(" "),t("p",[t("code",[e._v("Boolean")]),e._v("类型，用于控制打印到 "),t("code",[e._v("stderr")]),e._v(" 的弃用中是否包含其堆栈跟踪。 将此设置为 "),t("code",[e._v("true")]),e._v(" 将会打印对弃用的堆栈跟踪。 此属性代替 "),t("code",[e._v("--trace-deprecation")]),e._v(" 命令行标志。")]),e._v(" "),t("h3",{attrs:{id:"process-traceprocesswarnings"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-traceprocesswarnings"}},[e._v("#")]),e._v(" "),t("code",[e._v("process.traceProcessWarnings")])]),e._v(" "),t("p",[e._v("一个 "),t("code",[e._v("Boolean")]),e._v(", 用于控制是否将进程的警告打印到包含堆栈跟踪的 "),t("code",[e._v("stderr")]),e._v("中 。 将此设置为 "),t("code",[e._v("true")]),e._v(" 将打印对进程警告的堆栈跟踪（包括弃用）。 此属性代替 "),t("code",[e._v("--trace-warnings")]),e._v(" 命令行标志。")]),e._v(" "),t("h3",{attrs:{id:"process-type-readonly"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-type-readonly"}},[e._v("#")]),e._v(" "),t("code",[e._v("process.type")]),e._v(" "),t("em",[e._v("Readonly")])]),e._v(" "),t("p",[e._v("A "),t("code",[e._v("String")]),e._v(" representing the current process's type, can be "),t("code",[e._v('"browser"')]),e._v(" (i.e. main process), "),t("code",[e._v('"renderer"')]),e._v(", or "),t("code",[e._v('"worker"')]),e._v(" (i.e. web worker).")]),e._v(" "),t("h3",{attrs:{id:"process-versions-chrome-readonly"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-versions-chrome-readonly"}},[e._v("#")]),e._v(" "),t("code",[e._v("process.versions.chrome")]),e._v(" "),t("em",[e._v("Readonly")])]),e._v(" "),t("p",[t("code",[e._v("string")]),e._v("，一个表示 Chrome 版本的字符串。")]),e._v(" "),t("h3",{attrs:{id:"process-versions-electron-readonly"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-versions-electron-readonly"}},[e._v("#")]),e._v(" "),t("code",[e._v("process.versions.electron")]),e._v(" "),t("em",[e._v("Readonly")])]),e._v(" "),t("p",[t("code",[e._v("string")]),e._v("，一个表示 Electron 版本的字符串。")]),e._v(" "),t("h3",{attrs:{id:"process-windowsstore-readonly"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-windowsstore-readonly"}},[e._v("#")]),e._v(" "),t("code",[e._v("process.windowsStore")]),e._v(" "),t("em",[e._v("Readonly")])]),e._v(" "),t("p",[t("code",[e._v("Boolean")]),e._v("。如果应用运行于 Windows 商店(appx)，该属性为"),t("code",[e._v("true")]),e._v("，否则为 "),t("code",[e._v("undefined")]),e._v("。")]),e._v(" "),t("h2",{attrs:{id:"方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[e._v("#")]),e._v(" 方法")]),e._v(" "),t("p",[t("code",[e._v("process")]),e._v(" 对象具有以下方法:")]),e._v(" "),t("h3",{attrs:{id:"process-crash"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-crash"}},[e._v("#")]),e._v(" "),t("code",[e._v("process.crash()")])]),e._v(" "),t("p",[e._v("导致当前进程崩溃的主线程。")]),e._v(" "),t("h3",{attrs:{id:"process-getcreationtime"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-getcreationtime"}},[e._v("#")]),e._v(" "),t("code",[e._v("process.getCreationTime()")])]),e._v(" "),t("p",[e._v("Returns "),t("code",[e._v("Number | null")]),e._v(" - The number of milliseconds since epoch, or "),t("code",[e._v("null")]),e._v(" if the information is unavailable")]),e._v(" "),t("p",[e._v("Indicates the creation time of the application. The time is represented as number of milliseconds since epoch. It returns null if it is unable to get the process creation time.")]),e._v(" "),t("h3",{attrs:{id:"process-getcpuusage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-getcpuusage"}},[e._v("#")]),e._v(" "),t("code",[e._v("process.getCPUUsage()")])]),e._v(" "),t("p",[e._v("返回 "),t("a",{attrs:{href:"https://www.electronjs.org/docs/api/structures/cpu-usage",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("CPUUsage")]),t("OutboundLink")],1)]),e._v(" "),t("h3",{attrs:{id:"process-getiocounters-windows-linux"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-getiocounters-windows-linux"}},[e._v("#")]),e._v(" "),t("code",[e._v("process.getIOCounters()")]),e._v(" "),t("em",[e._v("Windows")]),e._v(" "),t("em",[e._v("Linux")])]),e._v(" "),t("p",[e._v("返回 "),t("a",{attrs:{href:"https://www.electronjs.org/docs/api/structures/io-counters",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("IOCounters")]),t("OutboundLink")],1)]),e._v(" "),t("h3",{attrs:{id:"process-getheapstatistics"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-getheapstatistics"}},[e._v("#")]),e._v(" "),t("code",[e._v("process.getHeapStatistics()")])]),e._v(" "),t("p",[e._v("返回 "),t("code",[e._v("Object")]),e._v(":")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("totalHeapSize")]),e._v(" Integer")]),e._v(" "),t("li",[t("code",[e._v("totalHeapSizeExecutable")]),e._v(" Integer")]),e._v(" "),t("li",[t("code",[e._v("totalPhysicalSize")]),e._v(" Integer")]),e._v(" "),t("li",[t("code",[e._v("totalAvailableSize")]),e._v(" Integer")]),e._v(" "),t("li",[t("code",[e._v("usedHeapSize")]),e._v(" Integer")]),e._v(" "),t("li",[t("code",[e._v("heapSizeLimit")]),e._v(" Integer")]),e._v(" "),t("li",[t("code",[e._v("mallocedMemory")]),e._v(" Integer")]),e._v(" "),t("li",[t("code",[e._v("peakMallocedMemory")]),e._v(" Integer")]),e._v(" "),t("li",[t("code",[e._v("doesZapGarbage")]),e._v(" Boolean")])]),e._v(" "),t("p",[e._v("Returns an object with V8 heap statistics. Note that all statistics are reported in Kilobytes.")]),e._v(" "),t("h3",{attrs:{id:"process-getblinkmemoryinfo"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-getblinkmemoryinfo"}},[e._v("#")]),e._v(" "),t("code",[e._v("process.getBlinkMemoryInfo()")])]),e._v(" "),t("p",[e._v("返回 "),t("code",[e._v("Object")]),e._v(":")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("allocated")]),e._v(" Integer - Size of all allocated objects in Kilobytes.")]),e._v(" "),t("li",[t("code",[e._v("marked")]),e._v(" Integer - Size of all marked objects in Kilobytes.")]),e._v(" "),t("li",[t("code",[e._v("total")]),e._v(" Integer - Total allocated space in Kilobytes.")])]),e._v(" "),t("p",[e._v("Returns an object with Blink memory information. It can be useful for debugging rendering / DOM related memory issues. Note that all values are reported in Kilobytes.")]),e._v(" "),t("h3",{attrs:{id:"process-getprocessmemoryinfo"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-getprocessmemoryinfo"}},[e._v("#")]),e._v(" "),t("code",[e._v("process.getProcessMemoryInfo()")])]),e._v(" "),t("p",[e._v("Returns "),t("code",[e._v("Promise<ProcessMemoryInfo>")]),e._v(" - Resolves with a "),t("a",{attrs:{href:"https://www.electronjs.org/docs/api/structures/process-memory-info",target:"_blank",rel:"noopener noreferrer"}},[e._v("ProcessMemoryInfo"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("Returns an object giving memory usage statistics about the current process. Note that all statistics are reported in Kilobytes. This api should be called after app ready.")]),e._v(" "),t("p",[e._v("Chromium does not provide "),t("code",[e._v("residentSet")]),e._v(" value for macOS. This is because macOS performs in-memory compression of pages that haven't been recently used. As a result the resident set size value is not what one would expect. "),t("code",[e._v("private")]),e._v(" memory is more representative of the actual pre-compression memory usage of the process on macOS.")]),e._v(" "),t("h3",{attrs:{id:"process-getsystemmemoryinfo"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-getsystemmemoryinfo"}},[e._v("#")]),e._v(" "),t("code",[e._v("process.getSystemMemoryInfo()")])]),e._v(" "),t("p",[e._v("返回 "),t("code",[e._v("Object")]),e._v(":")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("total")]),e._v(" Integer - 系统可用的物理内存总量(Kb)。")]),e._v(" "),t("li",[t("code",[e._v("free")]),e._v(" Integer - 应用程序或磁盘缓存未使用的内存总量。")]),e._v(" "),t("li",[t("code",[e._v("swapTotal")]),e._v(" Integer "),t("em",[e._v("Windows")]),e._v(" "),t("em",[e._v("Linux")]),e._v(" - 系统交换内存容量（单位：千字节）。")]),e._v(" "),t("li",[t("code",[e._v("swapFree")]),e._v(" Integer "),t("em",[e._v("Windows")]),e._v(" "),t("em",[e._v("Linux")]),e._v(" - 系统可用交换内存大小（单位：千字节）。")])]),e._v(" "),t("p",[e._v("返回一个对象, 它提供有关当前进程的内存使用情况统计信息。请注意, 所有统计信息都以千字节为单位报告。")]),e._v(" "),t("h3",{attrs:{id:"process-getsystemversion"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-getsystemversion"}},[e._v("#")]),e._v(" "),t("code",[e._v("process.getSystemVersion()")])]),e._v(" "),t("p",[e._v("Returns "),t("code",[e._v("String")]),e._v(" - The version of the host operating system.")]),e._v(" "),t("p",[e._v("示例：")]),e._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" version "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" process"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("getSystemVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("version"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// On macOS -> '10.13.6'")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// On Windows -> '10.0.17763'")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// On Linux -> '4.15.0-45-generic'")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])]),t("p",[t("strong",[e._v("Note:")]),e._v(" It returns the actual operating system version instead of kernel version on macOS unlike "),t("code",[e._v("os.release()")]),e._v(".")]),e._v(" "),t("h3",{attrs:{id:"process-takeheapsnapshot-filepath"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-takeheapsnapshot-filepath"}},[e._v("#")]),e._v(" "),t("code",[e._v("process.takeHeapSnapshot(filePath)")])]),e._v(" "),t("ul",[t("li",[t("code",[e._v("filePath")]),e._v(" String - Path to the output file.")])]),e._v(" "),t("p",[e._v("Returns "),t("code",[e._v("Boolean")]),e._v(" - Indicates whether the snapshot has been created successfully.")]),e._v(" "),t("p",[e._v("Takes a V8 heap snapshot and saves it to "),t("code",[e._v("filePath")]),e._v(".")]),e._v(" "),t("h3",{attrs:{id:"process-hang"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-hang"}},[e._v("#")]),e._v(" "),t("code",[e._v("process.hang()")])]),e._v(" "),t("p",[e._v("导致当前进程挂起的主线程。")]),e._v(" "),t("h3",{attrs:{id:"process-setfdlimit-maxdescriptors-macos-linux"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-setfdlimit-maxdescriptors-macos-linux"}},[e._v("#")]),e._v(" "),t("code",[e._v("process.setFdLimit(maxDescriptors)")]),e._v(" "),t("em",[e._v("macOS")]),e._v(" "),t("em",[e._v("Linux")])]),e._v(" "),t("ul",[t("li",[t("code",[e._v("maxDescriptors")]),e._v(" Integer")])]),e._v(" "),t("p",[e._v("将文件描述符的软限制设置为 "),t("code",[e._v("maxDescriptors")]),e._v(" 或 OS 硬限制, 其中以当前进程较低的值为准。")])])}),[],!1,null,null,null);s.default=a.exports}}]);