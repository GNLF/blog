(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{548:function(t,s,i){"use strict";i.r(s);var e=i(17),l=Object(e.a)({},(function(){var t=this,s=t.$createElement,i=t._self._c||s;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h1",{attrs:{id:"github使用指南"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#github使用指南"}},[t._v("#")]),t._v(" github使用指南")]),t._v(" "),i("h2",{attrs:{id:"github网站中的页面内容信息解释"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#github网站中的页面内容信息解释"}},[t._v("#")]),t._v(" github网站中的页面内容信息解释")]),t._v(" "),i("p",[i("img",{attrs:{src:"/blog/img/html/git2.png",alt:"git2"}})]),t._v(" "),i("ol",[i("li",[t._v("LOGO：点击 GitHub 的 LOGO 就进入控制面板")]),t._v(" "),i("li",[t._v("Searth：搜索窗口，在这里输入想找的用户或代码片段，就可以搜索到与之相关的信息。可以寻找查看各大开源项目")]),t._v(" "),i("li",[t._v("Pull Requests：显示用户已进行过的 Pull Request。通过这里，开发者可以很方便地追踪 Pull Request 的后续情况。")]),t._v(" "),i("li",[t._v("Issues：在这里可以查看用户拥有权限的仓库或分配给自己的Issue。当用户同时进行多个项目时，可以在这里一并查看 Issue")]),t._v(" "),i("li",[t._v("Marketplace：向开发者提供工具改进和定制工作流。")]),t._v(" "),i("li",[t._v("Gist：Gist功能主要用于管理及发布一些没必要保存在仓库中的代码，比如小的代码片段等。笔者就经常把一些随便编写的脚本代码等放在 Gist中。系统会自动管理更新历史，并且提供了 Fork 功能。另外，通过 Gist 还可以很方便地为同事编写代码示例。")]),t._v(" "),i("li",[t._v("Create a new：创建 respository，gist，organization")]),t._v(" "),i("li",[t._v("用户信息：点击后会显示用户的个人信息页面")])]),t._v(" "),i("p",[i("img",{attrs:{src:"/blog/img/html/git3.png",alt:"git2"}})]),t._v(" "),i("ol",[i("li",[t._v("Watch/ Start/ Fork 眼睛图标旁边写着 Watch 字样。点击这个按钮就可以 Watch 该仓库，今后该仓库的更新信息会显示在用户的公开活动中。\nStar 旁边的数字表示给这个仓库添加Star 的人数。这个数越高，代表该仓库越受关注。\nWatch 与Star 有所不同，Watch 之后该仓库的相关信息会在后述Notifications 中显示，让用户可以追踪仓库的内容\nStar 更像是书签，让用户将来可以在Star 标记的列表中找到该仓库。另外，Star 数还 GitHub 上判断仓库热门程度的指标之一。\n旁边的分叉图标是 Fork 按钮，后面的数字代表该仓库被 Fork 至各用户仓库的次数。这个数字越大，表示参与这个仓库开发的人越多。")]),t._v(" "),i("li",[t._v("Code\n显示该仓库中的文件列表。仓库名下方是该仓库的简单说明")]),t._v(" "),i("li",[t._v("Issues\n用于 BUG 报告、功能添加、方向性讨论等，将这些以 Issue 形式进行管理。Pull Request 时也会创建 Issue。旁边显示的数字是当前处于 Open 状态的Issue数。")]),t._v(" "),i("li",[t._v("Pull requests\n在 Pull Requests 中可以列表查看并管理 Pull Request 。代码的更改和讨论都可以在这里进行。旁边显示的数字表示尚未 Close 的 Pull Request")]),t._v(" "),i("li",[t._v("Wiki\nWiki是一种比 HTML 语法更简单的页面描述功能。常用于记录开发者之间应该共享的信息或软件文档。数字表示当前Wiki的页面数量。")]),t._v(" "),i("li",[t._v("Setting\n点击它可以打开账户设置页面。在这里可以进行个人信息、安全管理、付费方案的设置，在使用 GitHub 时请务必浏览一遍")]),t._v(" "),i("li",[t._v("Insights\nPulse: 显示该仓库最近的活动信息。该仓库中的软件是无人问津，还是在火热地开发之中，从这里可以一目了然。Graphs：以图表形式显示该仓库的各项指标。让用户轻松了解该仓库的活动")]),t._v(" "),i("li",[t._v("commits\n在这里可以查看当前分支的提交历史。左侧的数字表示提交数。")]),t._v(" "),i("li",[t._v("branches\n可以查看仓库的分支列表。左侧的数字表示当前拥有的分支数。")]),t._v(" "),i("li",[t._v("releases\n显示仓库的标签（Tag）列表。同时可以将标签加入时的文件以归")]),t._v(" "),i("li",[t._v("contributors\n显示对该仓库进行过提交的程序员名单。如果您也对该仓库发送过 Pull Request 并且被采纳，那么在这里就能找到自己的名字。左边的数字是程序员的人数。\n注意：README。一般而言，README 中记录着该仓库中软件的说明或使用方法以及许可协议等信息，请务必加以阅读。")])])])}),[],!1,null,null,null);s.default=l.exports}}]);