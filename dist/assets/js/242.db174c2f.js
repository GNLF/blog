(window.webpackJsonp=window.webpackJsonp||[]).push([[242],{712:function(t,a,s){"use strict";s.r(a);var e=s(17),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"pm2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pm2"}},[t._v("#")]),t._v(" PM2")]),t._v(" "),s("blockquote",[s("p",[t._v("PM2是 Node.js 下的生产环境进程管理工具。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/blog/img/node/pm2-v4.png",alt:"pm2 logo"}})]),t._v(" "),s("p",[s("a",{attrs:{href:"https://badge.fury.io/js/pm2",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://badge.fury.io/js/pm2.svg",alt:"npm version"}}),t._v(" "),s("OutboundLink")],1),s("a",{attrs:{href:"https://www.npmjs.com/package/pm2",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://img.shields.io/npm/dm/pm2.svg?style=flat-square",alt:"NPM Downloads"}}),t._v(" "),s("OutboundLink")],1),s("a",{attrs:{href:"https://travis-ci.org/Unitech/pm2",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://travis-ci.org/Unitech/pm2.svg?branch=master",alt:"Build Status"}}),t._v(" "),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("当我们的项目要部署到线上服务器时，不能单纯的靠 "),s("code",[t._v("node index")]),t._v(" 来启动应用程序了，因为我们断掉 SSH 连接后服务就终止了，这时我们就需要像 pm2 或者 forever 这样的进程管理工具了。")]),t._v(" "),s("p",[t._v("PM2是 Node.js 下的生产环境进程管理工具，可以利用它来简化很多node应用管理的繁琐任务，如性能监控、自动重启、负载均衡、日志记录、错误预警等等等，而且使用非常简单。")]),t._v(" "),s("h2",{attrs:{id:"为什么要使用pm2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么要使用pm2"}},[t._v("#")]),t._v(" 为什么要使用PM2")]),t._v(" "),s("p",[t._v("最根本的原因是因为node本身是一个单线程，在这种模式下，一个线程只能处理一个任务，要想提高吞吐量必须通过多线程。虽然单线程的好处有很多比如避免了线程同步或者死锁、状态同步等等之类的问题，但是在应用和计算能力要求日益倍增的今天，单线程最大的弊端就是无法利用多核CPU带来的优势来提升运行效率。")]),t._v(" "),s("ol",[s("li",[t._v("PM2可以把你的应用部署到服务器所有的CPU上，有效的解决了无法利用多核CPU的问题。")]),t._v(" "),s("li",[t._v("PM2有完善的辅助系统性能监控、自动重启、负载均衡、日志记录、错误预警等。")])]),t._v(" "),s("h2",{attrs:{id:"pm2主要特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pm2主要特点"}},[t._v("#")]),t._v(" PM2主要特点")]),t._v(" "),s("ul",[s("li",[t._v("内建负载均衡（使用Node cluster 集群模块、子进程，可以参考朴灵的《深入浅出node.js》一书第九章）")]),t._v(" "),s("li",[t._v("线程守护，keep alive")]),t._v(" "),s("li",[t._v("0秒停机重载，维护升级的时候不需要停机.")]),t._v(" "),s("li",[t._v("现在 Linux (stable) & MacOSx (stable) & Windows (stable).多平台支持")]),t._v(" "),s("li",[t._v("停止不稳定的进程（避免无限循环）")]),t._v(" "),s("li",[t._v("控制台检测")]),t._v(" "),s("li",[t._v("提供 HTTP API")]),t._v(" "),s("li",[t._v("远程控制和实时的接口API ( Nodejs 模块,允许和PM2进程管理器交互 )")])]),t._v(" "),s("h2",{attrs:{id:"网址与文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#网址与文档"}},[t._v("#")]),t._v(" 网址与文档")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("名称")]),t._v(" "),s("th",[t._v("地址")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("官网")]),t._v(" "),s("td",[s("a",{attrs:{href:"http://pm2.keymetrics.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://pm2.keymetrics.io/"),s("OutboundLink")],1)])]),t._v(" "),s("tr",[s("td",[t._v("英文文档")]),t._v(" "),s("td",[s("a",{attrs:{href:"http://pm2.keymetrics.io/docs/usage/cluster-mode/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://pm2.keymetrics.io/docs/usage/cluster-mode/"),s("OutboundLink")],1)])])])]),t._v(" "),s("h2",{attrs:{id:"开始使用pm2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开始使用pm2"}},[t._v("#")]),t._v(" 开始使用PM2")]),t._v(" "),s("h3",{attrs:{id:"安装pm2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装pm2"}},[t._v("#")]),t._v(" 安装pm2")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("npm install pm2 -g\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"简单使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简单使用"}},[t._v("#")]),t._v(" 简单使用")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("pm2 start ./bin/www --watch\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("blockquote",[s("p",[t._v("注意：这里用了--watch参数，意味着当你的express应用代码发生变化时，pm2会帮你重启服务，多贴心。")])]),t._v(" "),s("p",[t._v("使用package.json 简化命令，修改 package.json，添加 start 的命令：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('"scripts": {\n  "start": "NODE_ENV=production pm2 start index.js --name \'myblog\'"\n}\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h2",{attrs:{id:"pm2-常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pm2-常用命令"}},[t._v("#")]),t._v(" pm2 常用命令")]),t._v(" "),s("h3",{attrs:{id:"启动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启动"}},[t._v("#")]),t._v(" 启动")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("参数")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("--watch")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("监听应用目录的变化，一旦发生变化，自动重启。如果要精确监听、不见听的目录，最好通过配置文件。")])]),t._v(" "),s("tr",[s("td",[t._v("-i --instances")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("启用多少个实例，可用于负载均衡。如果-i 0或者-i max，则根据当前机器核数确定实例数目。")])]),t._v(" "),s("tr",[s("td",[t._v("--ignore-watch")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("排除监听的目录/文件，可以是特定的文件名，也可以是正则。比如"),s("code",[t._v('--ignore-watch="test node_modules "some scripts""')])])]),t._v(" "),s("tr",[s("td",[t._v("-n --name")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("应用的名称。查看应用信息的时候可以用到。")])]),t._v(" "),s("tr",[s("td",[t._v("-o --output")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("标准输出日志文件的路径。")])]),t._v(" "),s("tr",[s("td",[t._v("-e --error")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("错误输出日志文件的路径。")])]),t._v(" "),s("tr",[s("td",[t._v("--interpreter")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("the interpreter pm2 should use for executing app (bash, python...)。比如你用的coffee script来编写应用。")])])])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ pm2 start app.js\n$ pm2 start app.js -i max    # 根据有效CPU数目启动最大进程数目\n$ pm2 start app.js -i 3      # 启动3个进程\n$ pm2 start app.js -x        #用fork模式启动 app.js 而不是使用 cluster\n$ pm2 start app.js -x -- -a 23       # 用fork模式启动 app.js 并且传递参数 (-a 23)\n$ pm2 start app.js --name serverone  # 启动一个进程并把它命名为 serverone\n$ pm2 stop serverone         # 停止 serverone 进程\n$ pm2 start app.json         # 启动进程, 在 app.json里设置选项\n$ pm2 start app.js -i max -- -a 23   #在--之后给 app.js 传递参数\n$ pm2 start app.js -i max -e err.log -o out.log  # 启动 并 生成一个配置文件\n\n你也可以执行用其他语言编写的app  ( fork 模式):\n$ pm2 start my-bash-script.sh -x --interpreter bash\n$ pm2 start my-python-script.py -x --interpreter python\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("h3",{attrs:{id:"停止进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#停止进程"}},[t._v("#")]),t._v(" 停止进程")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ pm2 stop 0             # 停止指定的进程\n$ pm2 stop all           # 停止所有进程\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h3",{attrs:{id:"杀死进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#杀死进程"}},[t._v("#")]),t._v(" 杀死进程")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ pm2 delete 0           # 杀死指定的进程\n$ pm2 delete all         # 杀死全部进程\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h3",{attrs:{id:"显示进程状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#显示进程状态"}},[t._v("#")]),t._v(" 显示进程状态")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ pm2 ls                 # 显示所有进程状态\n$ pm2 l                  # 显示所有进程状态\n$ pm2 list               # 显示所有进程状态\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h3",{attrs:{id:"监视所有进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#监视所有进程"}},[t._v("#")]),t._v(" 监视所有进程")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ pm2 monit              # 监视所有进程\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"显示所有进程日志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#显示所有进程日志"}},[t._v("#")]),t._v(" 显示所有进程日志")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ pm2 logs               # 显示所有进程日志\n$ pm2 logs [id|name]     # 查看指定进程或名称日志\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h3",{attrs:{id:"重启程序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重启程序"}},[t._v("#")]),t._v(" 重启程序")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ pm2 restart all        # 重启所有进程\n$ pm2 restart 0          # 重启指定的进程\n$ pm2 reload all         # 0秒停机重载进程 (用于 NETWORKED 进程)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("blockquote",[s("p",[t._v("更多命令请使用 pm2 -h 查看。")])]),t._v(" "),s("h2",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("网址")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"http://blog.csdn.net/qq_17475155/article/details/53823862",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://blog.csdn.net/qq_17475155/article/details/53823862"),s("OutboundLink")],1)])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://www.cnblogs.com/chyingp/p/pm2-documentation.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.cnblogs.com/chyingp/p/pm2-documentation.html"),s("OutboundLink")],1)])])])])])}),[],!1,null,null,null);a.default=r.exports}}]);